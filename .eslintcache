[{"/home/isaias/Desktop/bootcamp/goBarber/src/App.tsx":"1","/home/isaias/Desktop/bootcamp/goBarber/src/routes/index.tsx":"2","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/schema.ts":"3","/home/isaias/Desktop/bootcamp/goBarber/src/components/Button/index.tsx":"4","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/styles.ts":"5","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/User.tsx":"6","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Password.tsx":"7","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/index.tsx":"8","/home/isaias/Desktop/bootcamp/goBarber/src/services/api.ts":"9","/home/isaias/Desktop/bootcamp/goBarber/src/styles/global.ts":"10","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/schema.ts":"11","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/styles.ts":"12","/home/isaias/Desktop/bootcamp/goBarber/src/components/Icon/index.tsx":"13","/home/isaias/Desktop/bootcamp/goBarber/src/components/Input/index.tsx":"14","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Email.tsx":"15","/home/isaias/Desktop/bootcamp/goBarber/src/components/Input/styles.ts":"16","/home/isaias/Desktop/bootcamp/goBarber/src/components/Button/styles.ts":"17","/home/isaias/Desktop/bootcamp/goBarber/src/components/PopUp/styles.ts":"18","/home/isaias/Desktop/bootcamp/goBarber/src/components/PopUp/index.tsx":"19","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Alert.tsx":"20","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Closed.tsx":"21","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Succes.tsx":"22","/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Error.tsx":"23","/home/isaias/Desktop/bootcamp/goBarber/src/hooks/index.tsx":"24","/home/isaias/Desktop/bootcamp/goBarber/src/hooks/auth.tsx":"25","/home/isaias/Desktop/bootcamp/goBarber/src/hooks/popUp.tsx":"26","/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/index.tsx":"27","/home/isaias/Desktop/bootcamp/goBarber/src/index.tsx":"28","/home/isaias/Desktop/bootcamp/goBarber/src/routes/Route.tsx":"29","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/schema.ts":"30","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/index.tsx":"31","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/styles.ts":"32","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/schema.ts":"33","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/styles.ts":"34","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/index.tsx":"35","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Dashboard/index.tsx":"36","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Dashboard/styles.ts":"37","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/schema.ts":"38","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/index.tsx":"39","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/styles.ts":"40"},{"size":380,"mtime":1610399578531,"results":"41","hashOfConfig":"42"},{"size":787,"mtime":1614899382970,"results":"43","hashOfConfig":"44"},{"size":319,"mtime":1610053431709,"results":"45","hashOfConfig":"44"},{"size":345,"mtime":1609795751481,"results":"46","hashOfConfig":"44"},{"size":1292,"mtime":1610561052791,"results":"47","hashOfConfig":"44"},{"size":1198,"mtime":1609868838990,"results":"48","hashOfConfig":"42"},{"size":829,"mtime":1609872982856,"results":"49","hashOfConfig":"44"},{"size":2529,"mtime":1614965981331,"results":"50","hashOfConfig":"44"},{"size":116,"mtime":1610126565417,"results":"51","hashOfConfig":"44"},{"size":488,"mtime":1610558039782,"results":"52","hashOfConfig":"44"},{"size":228,"mtime":1610053575467,"results":"53","hashOfConfig":"44"},{"size":1341,"mtime":1610561045755,"results":"54","hashOfConfig":"44"},{"size":873,"mtime":1610290095442,"results":"55","hashOfConfig":"44"},{"size":1231,"mtime":1610052130727,"results":"56","hashOfConfig":"44"},{"size":1848,"mtime":1609872988116,"results":"57","hashOfConfig":"44"},{"size":891,"mtime":1610051129529,"results":"58","hashOfConfig":"42"},{"size":323,"mtime":1609795053529,"results":"59","hashOfConfig":"44"},{"size":1073,"mtime":1610295477504,"results":"60","hashOfConfig":"44"},{"size":911,"mtime":1614561681900,"results":"61","hashOfConfig":"44"},{"size":636,"mtime":1610289815447,"results":"62","hashOfConfig":"63"},{"size":926,"mtime":1610291632184,"results":"64","hashOfConfig":"42"},{"size":1033,"mtime":1610293325629,"results":"65","hashOfConfig":"44"},{"size":1168,"mtime":1610289768378,"results":"66","hashOfConfig":"44"},{"size":368,"mtime":1610399897931,"results":"67","hashOfConfig":"44"},{"size":2271,"mtime":1614961553364,"results":"68","hashOfConfig":"44"},{"size":1493,"mtime":1610492877479,"results":"69","hashOfConfig":"42"},{"size":2638,"mtime":1614899307830,"results":"70","hashOfConfig":"44"},{"size":198,"mtime":1608148689462,"results":"71","hashOfConfig":"44"},{"size":793,"mtime":1610731373800,"results":"72","hashOfConfig":"44"},{"size":169,"mtime":1614561969353,"results":"73","hashOfConfig":"44"},{"size":2326,"mtime":1614642214667,"results":"74","hashOfConfig":"44"},{"size":1292,"mtime":1614561182503,"results":"75","hashOfConfig":"42"},{"size":239,"mtime":1614641218788,"results":"76","hashOfConfig":"44"},{"size":1292,"mtime":1614610626603,"results":"77","hashOfConfig":"44"},{"size":2645,"mtime":1614642276213,"results":"78","hashOfConfig":"42"},{"size":7553,"mtime":1614961055203,"results":"79","hashOfConfig":"44"},{"size":3928,"mtime":1614955190807,"results":"80","hashOfConfig":"44"},{"size":700,"mtime":1614964266636,"results":"81","hashOfConfig":"44"},{"size":4582,"mtime":1614965991903,"results":"82","hashOfConfig":"44"},{"size":1404,"mtime":1614961826910,"results":"83","hashOfConfig":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"16p7y5o",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"fdptkt",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"1yjtl82",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/isaias/Desktop/bootcamp/goBarber/src/App.tsx",[],["172","173","174","175","176"],"/home/isaias/Desktop/bootcamp/goBarber/src/routes/index.tsx",[],["177","178","179","180","181"],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/schema.ts",[],["182","183","184","185","186"],"/home/isaias/Desktop/bootcamp/goBarber/src/components/Button/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/User.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Password.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/index.tsx",["187"],"/home/isaias/Desktop/bootcamp/goBarber/src/services/api.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/styles/global.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignIn/schema.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/components/Icon/index.tsx",["188","189"],"/home/isaias/Desktop/bootcamp/goBarber/src/components/Input/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Email.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/components/Input/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/components/Button/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/components/PopUp/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/components/PopUp/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Alert.tsx",[],["190","191","192","193","194"],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Closed.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Succes.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/svgs/Error.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/hooks/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/hooks/auth.tsx",["195","196"],"/home/isaias/Desktop/bootcamp/goBarber/src/hooks/popUp.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/SignUp/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/routes/Route.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/schema.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/index.tsx",["197","198"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { FiLogIn } from 'react-icons/fi';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport schema from './schema';\nimport { usePopUp } from '../../hooks/popUp';\n\nimport Logo from '../../assets/icons/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\nimport GlobalStyle from '../../styles/global';\nimport api from '../../services/api';\n\ninterface UserData {\n  email: string;\n}\n\nfunction ForgotPassword(): JSX.Element {\n  const [loading, setLoading] = React.useState<boolean | null>(null);\n  const history = useHistory();\n  const { addPopUp } = usePopUp();\n\n  const { handleSubmit, register, errors } = useForm<UserData>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = React.useCallback(\n    async (values: UserData) => {\n      try {\n        setLoading(true);\n        await api.post('/password/forgot', {\n          email: values.email,\n        });\n\n        addPopUp({\n          icon: 'Succes',\n          title: 'Succes',\n          description: 'Password change done',\n        });\n      } catch (err) {\n        console.log(err);\n        addPopUp({\n          icon: 'Error',\n          title: `Error`,\n          description: 'Error in forgot password',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [history, addPopUp],\n  );\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <img src={Logo} alt=\"logo\" />\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <h1>recover password</h1>\n            <Input\n              className={errors.email ? 'borderError' : ''}\n              icon=\"Email\"\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"email\"\n              register={register}\n            />\n            <Button type=\"submit\">{loading ? 'loading...' : 'forgot'}</Button>\n            <a href=\"forgot\">you have forgotten the password?</a>\n          </form>\n          <Link to=\"register\">\n            <FiLogIn />\n            register\n          </Link>\n        </Content>\n\n        <Background />\n      </Container>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default ForgotPassword;\n","/home/isaias/Desktop/bootcamp/goBarber/src/pages/ForgotPassword/styles.ts",[],["199","200","201","202","203"],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/schema.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/ResetPassword/index.tsx",["204","205"],"import React from 'react';\nimport { Link, useHistory, useLocation as UseLocation } from 'react-router-dom';\n\nimport { FiLogIn } from 'react-icons/fi';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport schema from './schema';\nimport { usePopUp } from '../../hooks/popUp';\n\nimport Logo from '../../assets/icons/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\nimport GlobalStyle from '../../styles/global';\nimport api from '../../services/api';\n\ninterface UserData {\n  password: string;\n  password_confirmation: string;\n}\n\nfunction ResetPassword(): JSX.Element {\n  const history = useHistory();\n  const { addPopUp } = usePopUp();\n  const location = UseLocation();\n\n  const { handleSubmit, register, errors } = useForm<UserData>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = React.useCallback(\n    async (values: UserData) => {\n      try {\n        const token = location.search.replace('?tken=', '');\n\n        if (!token) {\n          throw new Error();\n        }\n\n        api.post('/password/reset', {\n          password: values.password,\n          password_confirmation: values.password_confirmation,\n          token,\n        });\n\n        addPopUp({ icon: 'Succes', title: 'Succes', description: 'Has Login' });\n        history.push('/login');\n      } catch (err) {\n        console.log(err);\n        addPopUp({\n          icon: 'Error',\n          title: `Error`,\n          description: 'not logged in',\n        });\n      }\n    },\n    [addPopUp],\n  );\n\n  return (\n    <>\n      <Container>\n        <Content>\n          <img src={Logo} alt=\"logo\" />\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <h1>reset password</h1>\n            <Input\n              className={errors.password ? 'borderError' : ''}\n              icon=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              register={register}\n            />\n            <Input\n              className={errors.password ? 'borderError' : ''}\n              icon=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password confirmation\"\n              register={register}\n            />\n            <Button type=\"submit\">change password</Button>\n          </form>\n          <Link to=\"register\">\n            <FiLogIn />\n            register\n          </Link>\n        </Content>\n\n        <Background />\n      </Container>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default ResetPassword;\n","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Dashboard/index.tsx",["206"],"import { format, isToday } from 'date-fns';\nimport React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport { ptBR } from 'date-fns/esm/locale';\nimport { isAfter, parseISO } from 'date-fns/esm';\nimport { useAuth } from '../../hooks/auth';\nimport {\n  Container,\n  Header,\n  Profile,\n  Content,\n  Schedule,\n  NextAppointment,\n  Calendar,\n  Section,\n  Appointment,\n} from './styles';\nimport Logo from '../../assets/icons/logo.svg';\nimport 'react-day-picker/lib/style.css';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appoitment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nfunction Home(): JSX.Element {\n  const { signOut, user } = useAuth();\n  const history = useHistory();\n  const [selectDate, setSelectDate] = React.useState(new Date());\n  const [currentMonth, setCurrentMonth] = React.useState(new Date());\n  const [monthAvailability, setMonthAvailability] = React.useState<\n    MonthAvailabilityItem[]\n  >([]);\n  const [appointments, setAppointments] = React.useState<Appoitment[]>([]);\n\n  const handleClick = React.useCallback(() => {\n    signOut();\n    history.push('/login');\n  }, [signOut, history]);\n\n  const handleDateChange = React.useCallback(\n    (day: Date, modifiers: DayModifiers) => {\n      if (modifiers.available && !modifiers.disabled) {\n        setSelectDate(day);\n      }\n    },\n    [],\n  );\n\n  const handleMonthChange = React.useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .get(`providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then((response) => {\n        setMonthAvailability(response.data);\n      });\n  }, [currentMonth, user.id]);\n\n  React.useEffect(() => {\n    api\n      .get<Appoitment[]>('/appointments/me', {\n        params: {\n          year: selectDate.getFullYear(),\n          month: selectDate.getMonth() + 1,\n          day: selectDate.getDate(),\n        },\n      })\n      .then((response) => {\n        const appointmentsFormatted = response.data.map((appointment) => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n          };\n        });\n        setAppointments(appointmentsFormatted);\n\n        console.log(response.data);\n      });\n  }, [selectDate]);\n\n  const disableDays = React.useMemo(() => {\n    const dates = monthAvailability\n      .filter((monthDay) => monthDay.available === false)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = React.useMemo(() => {\n    return format(selectDate, \"'day' dd 'the' MMM\", {\n      locale: ptBR,\n    });\n  }, [selectDate]);\n\n  const selectedWeeDay = React.useMemo(() => {\n    return format(selectDate, 'cccc', {\n      locale: ptBR,\n    });\n  }, [selectDate]);\n\n  const morningAppointments = React.useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = React.useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = React.useMemo(() => {\n    return appointments.find((appointment) =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <Container>\n      <Header>\n        <img src={Logo} alt=\"logo\" />\n\n        <Profile>\n          <img\n            src=\"https://scontent.fcgh5-1.fna.fbcdn.net/v/t31.0-8/18077219_284318775359631_700044029426251945_o.jpg?_nc_cat=109&ccb=3&_nc_sid=730e14&_nc_eui2=AeEh3t8UF5iWkKVgTsCjwh3FPlzeQ796hVg-XN5Dv3qFWET5SgM_5ah9YBBCuuAz3P4TCOs4yAcceGxH8vNapq5o&_nc_ohc=VHau98i7MpwAX_pSlFz&_nc_ht=scontent.fcgh5-1.fna&oh=6d00e7abfba43996d81f91a4e647eff6&oe=6065A71C\"\n            alt=\"description\"\n          />\n          <div>\n            <p>wellcome!</p>\n            <Link to=\"/profile\">\n              <strong>{user.name}</strong>\n            </Link>\n          </div>\n        </Profile>\n\n        <button type=\"button\" onClick={() => handleClick()}>\n          <FiPower />\n        </button>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>appointments hours</h1>\n          <p>\n            <span>{isToday(selectDate) && 'today | '}</span>\n            <span>{selectedDateAsText} | </span>\n            <span>{selectedWeeDay}</span>\n          </p>\n\n          {isToday(selectDate) && nextAppointment && (\n            <NextAppointment>\n              <strong>appointment to follow</strong>\n              <div>\n                <img\n                  src={nextAppointment.user.avatar_url}\n                  alt={nextAppointment.user.name}\n                />\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </NextAppointment>\n          )}\n\n          <Section>\n            <strong>morning</strong>\n            {morningAppointments.length === 0 && (\n              <p>no appointment in this period</p>\n            )}\n\n            {morningAppointments.map((appointment) => {\n              return (\n                <Appointment key={appointment.id}>\n                  <span>\n                    <FiClock />\n                    {appointment.hourFormatted}\n                  </span>\n                  <div>\n                    <img\n                      src={appointment.user.avatar_url}\n                      alt={appointment.user.name}\n                    />\n                    <strong>{appointment.user.name}</strong>\n                  </div>\n                </Appointment>\n              );\n            })}\n          </Section>\n          <Section>\n            <strong>afternoon</strong>\n            {afternoonAppointments.length === 0 && (\n              <p>no appointment in this period</p>\n            )}\n            {afternoonAppointments.map((appointment) => {\n              return (\n                <Appointment key={appointment.id}>\n                  <span>\n                    <FiClock />\n                    {appointment.hourFormatted}\n                  </span>\n                  <div>\n                    <img\n                      src={appointment.user.avatar_url}\n                      alt={appointment.user.name}\n                    />\n                    <strong>{appointment.user.name}</strong>\n                  </div>\n                </Appointment>\n              );\n            })}\n          </Section>\n        </Schedule>\n\n        <Calendar>\n          <DayPicker\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            onDayClick={handleDateChange}\n            selectedDays={selectDate}\n            onMonthChange={handleMonthChange}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Home;\n","/home/isaias/Desktop/bootcamp/goBarber/src/pages/Dashboard/styles.ts",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/schema.ts",["207","208"],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/index.tsx",[],"/home/isaias/Desktop/bootcamp/goBarber/src/pages/Profile/styles.ts",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"209","replacedBy":"219"},{"ruleId":"211","replacedBy":"220"},{"ruleId":"213","replacedBy":"221"},{"ruleId":"215","replacedBy":"222"},{"ruleId":"217","replacedBy":"223"},{"ruleId":"209","replacedBy":"224"},{"ruleId":"211","replacedBy":"225"},{"ruleId":"213","replacedBy":"226"},{"ruleId":"215","replacedBy":"227"},{"ruleId":"217","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":40,"column":9,"nodeType":"231","messageId":"232","endLine":40,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":24},{"ruleId":"229","severity":1,"message":"230","line":33,"column":7,"nodeType":"231","messageId":"232","endLine":33,"endColumn":18},{"ruleId":"209","replacedBy":"237"},{"ruleId":"211","replacedBy":"238"},{"ruleId":"213","replacedBy":"239"},{"ruleId":"215","replacedBy":"240"},{"ruleId":"217","replacedBy":"241"},{"ruleId":"229","severity":1,"message":"230","line":52,"column":5,"nodeType":"231","messageId":"232","endLine":52,"endColumn":16},{"ruleId":"229","severity":1,"message":"230","line":53,"column":5,"nodeType":"231","messageId":"232","endLine":53,"endColumn":16},{"ruleId":"229","severity":1,"message":"230","line":46,"column":9,"nodeType":"231","messageId":"232","endLine":46,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":56,"column":5,"nodeType":"244","endLine":56,"endColumn":24,"suggestions":"245"},{"ruleId":"209","replacedBy":"246"},{"ruleId":"211","replacedBy":"247"},{"ruleId":"213","replacedBy":"248"},{"ruleId":"215","replacedBy":"249"},{"ruleId":"217","replacedBy":"250"},{"ruleId":"229","severity":1,"message":"230","line":51,"column":9,"nodeType":"231","messageId":"232","endLine":51,"endColumn":20},{"ruleId":"242","severity":1,"message":"251","line":59,"column":5,"nodeType":"244","endLine":59,"endColumn":15,"suggestions":"252"},{"ruleId":"229","severity":1,"message":"230","line":98,"column":9,"nodeType":"231","messageId":"232","endLine":98,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":10,"column":25,"nodeType":"255","messageId":"256","endLine":10,"endColumn":28,"suggestions":"257"},{"ruleId":"253","severity":1,"message":"254","line":16,"column":27,"nodeType":"255","messageId":"256","endLine":16,"endColumn":30,"suggestions":"258"},"lines-around-directive",["259"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["259"],[],[],[],[],["259"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'DefaultContext' is defined but never used.","Identifier","unusedVar",["259"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook React.useCallback has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array.","ArrayExpression",["260"],["259"],[],[],[],[],"React Hook React.useCallback has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.",["261"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["262","263"],["264","265"],"padding-line-between-statements",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"messageId":"270","fix":"271","desc":"272"},{"messageId":"273","fix":"274","desc":"275"},{"messageId":"270","fix":"276","desc":"272"},{"messageId":"273","fix":"277","desc":"275"},"Update the dependencies array to be: [addPopUp]",{"range":"278","text":"279"},"Update the dependencies array to be: [addPopUp, history, location.search]",{"range":"280","text":"281"},"suggestUnknown",{"range":"282","text":"283"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"282","text":"284"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"285","text":"283"},{"range":"285","text":"284"},[1486,1505],"[addPopUp]",[1616,1626],"[addPopUp, history, location.search]",[318,321],"unknown","never",[517,520]]